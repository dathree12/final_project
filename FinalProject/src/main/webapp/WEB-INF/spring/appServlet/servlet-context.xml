<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 
		컨트롤러에서 로그인한 사용자에 대한 정보를 가져오기 위해 아래의 내용 추가 
	-->
	<annotation-driven>
        <argument-resolvers>
            <beans:bean class="org.springframework.security.web.method.annotation.AuthenticationPrincipalArgumentResolver" />
        </argument-resolvers>
	</annotation-driven>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->

	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/js/**" location="/resources/js/" />
	<resources mapping="/css/**" location="/resources/css/" />
	<resources mapping="/images/**" location="/resources/images/" />
	<resources mapping="/upload/**" location="/resources/upload/" />
	<resources mapping="/ckeditor/**" location="/resources/ckeditor/" />
	<resources mapping="/bootstrap/**" location="/resources/bootstrap/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.cereal.books" />

	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	
		<!-- 
	<beans:bean id="loginController" class="com.kh.spring.member.controller.LoginController"/>
	<beans:bean id="logoutController" class="com.kh.spring.member.controller.LogoutController"/>
	
	<beans:bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<beans:property name="mappings">
			<beans:props>
				<beans:prop key="login.me">loginController</beans:prop>
				<beans:prop key="logout.me">logoutController</beans:prop>						
			</beans:props>
		</beans:property>
	</beans:bean> 
	 -->
	 
	 <!-- 
	 	인터셉터 설정
	 	 - 인터셉터 자체가 웹 관련 설정이기 때문에 root-context.xml이 아닌 servlet-context.xml에 작성한다.	 
	 -->
	 
	<!-- 인터셉터를 적용시킬 요청(컨트롤러) 선택 
	 <interceptors>
	 	<interceptor>
	 	 	<mapping path="/member/update"/>
	 	 	<mapping path="/member/delete"/>
	 	 	
	 	 	와일드카드 /*, /**의 차이점
	 	 	
	 	 	/member/*
	 	 	  - /member/member_info (O)
	 	 	  - /member/insert (O)
	 	 	  - /member/delete (O)
	 	 	  - /member/delete/10 (X)
	 	 	  - /member/insert/user (X)
	 	 	  
 	 	    /member/**
 	 	      - /member/member_info (O)
	 	 	  - /member/insert (O)
	 	 	  - /member/delete (O)
	 	 	  - /member/delete/10 (O)
	 	 	  - /member/insert/user (O)
	 		<mapping path="/member/**"/>
	 		<mapping path="/board/**"/>
	 		
	 		인터셉터를 제외시킬 요청(컨트롤러) 선택
	 		<exclude-mapping path="/member/enroll"/>
	 		<exclude-mapping path="/member/idCheck"/>
	 		<exclude-mapping path="/board/list"/>
			
			인터셉터 등록
	 		<beans:bean id="loginCheckInterceptor" class="com.kh.mvc.common.interceptor.LoginCheckInterceptor"/>
	 	</interceptor>
	 </interceptors>
	-->
</beans:beans>
