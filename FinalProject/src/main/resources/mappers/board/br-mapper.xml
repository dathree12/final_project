<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.cereal.books.board.model.dao.ReviewDao">
	<sql id="brListSql">
		SELECT BR.BR_NO,
		       BR.USER_NO,
		       M.USER_NNAME,
		       BR.BR_ISBN,
		       BR.BR_PRESENT_PIC,
		       BR.BR_TITLE,
		       BR.BR_CREATE_DATE,
		       BR.BR_MODIFY_DATE,
		       BR.BR_BOOKTYPE,
		       BR.BR_CONTENT,
		       BR.BR_VIEWCOUNT,
		       BR.BR_LIKE,
		       BR.BR_STATUS,
		       BR.BR_RATING
		FROM BOOK_REVIEW_BOARD BR
		JOIN MEMBER M ON(BR.USER_NO = M.USER_NO)		
		WHERE BR.BR_STATUS='Y'
	</sql>

	<!-- 글쓰기 resultmap -->
	<resultMap type="ReviewBoard" id="brResultMap"> <!-- type vo자바클래스 변수 이름,, resultMap 쓰는 이유는 컬럼과 vo이름이 다를때 -->
		<id property="brNo" column="BR_NO"/>
		<result property="userNo" column="USER_NO"/>
		<result property="userNname" column="USER_NNAME"/>
		<result property="brIsbn" column="BR_ISBN"/>
		<result property="brPresentPic" column="BR_PRESENT_PIC"/>
		<result property="brTitle" column="BR_TITLE"/>
		<result property="brCreateDate" column="BR_CREATE_DATE"/>
		<result property="brModifyDate" column="BR_MODIFY_DATE"/>
		<result property="brBookType" column="BR_BOOKTYPE"/>
		<result property="brContent" column="BR_CONTENT"/>
		<result property="brViewCount" column="BR_VIEWCOUNT"/>
		<result property="brLike" column="BR_LIKE"/>
		<result property="status" column="BR_STATUS"/>
		<result property="brRating" column="BR_RATING"/>
	</resultMap>

 	<!-- 글상세보기 resultmap(댓글포함) -->
 	<resultMap type="ReviewBoard" id="brDetailResultMap"> <!-- type vo자바클래스 변수 이름,, resultMap 쓰는 이유는 컬럼과 vo이름이 다를때 -->
		<id property="brNo" column="BR_NO"/>
		<result property="userNo" column="USER_NO"/>
		<result property="userNname" column="USER_NNAME"/>
		<result property="brIsbn" column="BR_ISBN"/>
		<result property="brTitle" column="BR_TITLE"/>
		<result property="brModifyDate" column="BR_MODIFY_DATE"/>
		<result property="brBookType" column="BR_BOOKTYPE"/>
		<result property="brContent" column="BR_CONTENT"/>
		<result property="brViewCount" column="BR_VIEWCOUNT"/>
	  	<result property="brLike" column="BR_LIKE"/>
		<result property="status" column="BR_STATUS"/>
		<result property="brRating" column="BR_RATING"/>
	</resultMap>
	
	<!-- 댓글 resultmap -->
	<resultMap type="Comment" id="boardCommentResultMap">
		<id property="comNo" column="COM_NO"/>
		<result property="comWriter" column="COM_WRITER"/>
		<result property="comContent" column="COM_CONTENT"/>
		<result property="comCreateDate" column="COM_CREATE_DATE"/>
		<result property="comEditDate" column="COM_EDIT_DATE"/>
		<result property="comStatus" column="COM_STATUS"/>
		<result property="qaNo" column="QA_NO"/>
		<result property="bcNo" column="BC_NO"/>
		<result property="brNo" column="BR_NO"/>
		<result property="bfNo" column="BF_NO"/>
	</resultMap>
	
	<!-- 스크랩 resultmap -->
	<resultMap type="BookScrap" id="bookScrapResultMap">
		<id property="scrapNo" column="SCRAP_NO"/>
		<result property="userNo" column="USER_NO"/>
		<result property="bsIsbn" column="BS_ISBN"/> <!-- 주의!! bs임 br아님 -->
		<result property="scrapStatus" column="SCRAP_STATUS"/>
	</resultMap>
	
	<!-- 글쓰기 -->
	<insert id="insertReviewBoard" parameterType="map"
		useGeneratedKeys="true" keyProperty="brNo" keyColumn="BR_NO">
  		
	  	INSERT INTO BOOK_REVIEW_BOARD
	  		VALUES(
	  			SEQ_BR_NO.NEXTVAL,
	  			#{userNo},
	  			#{brIsbn},
	  			DEFAULT,
	  			#{brTitle},
	  			DEFAULT,
	  			DEFAULT,
	  			#{brBookType},
	  			#{brContent},
	  			DEFAULT,
	  			DEFAULT,
	  			'Y',
	  			DEFAULT
 		)
	</insert>
	
	<!-- list불러오고 전체 보드 수 구해서 페이징처리까지 -->
	<select id="selectBoardList" parameterType="map" resultMap="brResultMap">
		<include refid="brListSql"></include>
		ORDER BY BR.BR_NO DESC
	</select>
	
	<!-- 추천순으로 북리뷰 메인 정렬하기 페이징 처리까지 -->
	<select id="selectBoardSortingList" parameterType="map" resultMap="brResultMap">
		<include refid="brListSql"></include>
		ORDER BY BR.BR_LIKE DESC
	</select>
	
	<select id="selectCount" parameterType="map" resultType="_int">
		SELECT COUNT(*)
		FROM BOOK_REVIEW_BOARD BR
		WHERE BR.BR_STATUS='Y'
	</select>
		
	<!-- 글삭제  -->
	<update id="deleteBookreview" parameterType="_int">
		UPDATE BOOK_REVIEW_BOARD BR
			SET BR.BR_STATUS = 'N'
			WHERE BR_NO = #{brNo}
	</update>
	
	<!-- 글상세보기 -->
	<select id="selectBoardDetail" parameterType="_int" resultMap="brDetailResultMap">
		SELECT BR.BR_NO,
		       BR.USER_NO,
		       M.USER_NNAME,
		       BR.BR_ISBN,
		       BR.BR_PRESENT_PIC,
		       BR.BR_TITLE,
		       BR.BR_MODIFY_DATE,
		       BR.BR_BOOKTYPE,
		       BR.BR_CONTENT,
		       BR.BR_VIEWCOUNT,
		       BR.BR_LIKE,	
		       BR.BR_STATUS,
		       BR.BR_RATING,
		       BS.SCRAP_NO,
		       BS.USER_NO,
		       BS.SCRAP_STATUS
		FROM BOOK_REVIEW_BOARD BR
		JOIN MEMBER M ON(BR.USER_NO = M.USER_NO)
		LEFT OUTER JOIN BOOK_SCRAP BS ON(BR.BR_ISBN = BS.BS_ISBN)
		WHERE BR.BR_NO = #{brNo}	
	</select>
	
	<!-- 댓글 집어넣기 -->
	<insert id="saveComment" parameterType="map"
		useGeneratedKeys="true" keyProperty="comNo" keyColumn="COM_NO">
  		
	  	INSERT INTO COMMENT_BOARD
	  		VALUES(
	  			SEQ_BR_NO.NEXTVAL,
	  			#{comWriter},
	  			#{comContent},
	  			DEFAULT,
	  			DEFAULT,
	  			'Y',
	  			DEFAULT,
	  			DEFAULT,
	  			#{brNo},
	  			DEFAULT
 		)
	</insert>
	
	<!-- 댓글 불러오기-->
	<select id="listComment" parameterType="_int"
						resultMap="boardCommentResultMap">
		SELECT CB.COM_NO,
			   CB.COM_WRITER,
			   CB.COM_CONTENT,
			   CB.COM_CREATE_DATE,
			   CB.COM_STATUS,
			   CB.BR_NO
		FROM COMMENT_BOARD CB
		WHERE CB.BR_NO = #{brNo} AND CB.COM_STATUS='Y'
	</select>
	
	<!-- 스크랩 정보 불러오기 -->
	<select id="scrapCheck" resultType="map" resultMap="bookScrapResultMap">
		SELECT *
		FROM BOOK_SCRAP
		WHERE USER_NO = #{userNo} AND BS_ISBN = #{bsIsbn}
	</select>
	<!-- 스크랩 하기 -->
	<insert id="insertScrap" parameterType="map"
		useGeneratedKeys="true" keyProperty="scrapNo" keyColumn="SCRAP_NO">
  		
	  	INSERT INTO BOOK_SCRAP
	  		VALUES(
				SEQ_BR_NO.NEXTVAL,
				#{userNo},
				#{bsIsbn},
				DEFAULT
 		)
	</insert>
	<!-- 스크랩 지우기 -->
	<delete id="deleteScrap" parameterType="map">
		DELETE FROM BOOK_SCRAP
			WHERE USER_NO = #{userNo} AND BS_ISBN = #{bsIsbn}
	</delete>
	
	<!-- 검색을 통한 리스트 조회, 페이징 처리o -->
	<select id="getBoardCount_Id" parameterType="map" resultType="_int">
		SELECT COUNT(*)
		FROM BOOK_REVIEW_BOARD BR
		JOIN MEMBER M ON(BR.USER_NO = M.USER_NO)
		WHERE BR.BR_STATUS='Y'
		AND M.USER_NNAME LIKE '%'||#{br_searchword}||'%'
	</select>
	<select id="getBoardCount_Title" parameterType="map" resultType="_int">
		SELECT COUNT(*)
		FROM BOOK_REVIEW_BOARD BR
		WHERE BR.BR_STATUS='Y'
		AND BR.BR_TITLE LIKE '%'||#{br_searchword}||'%'
	</select>
	<select id="getBoardCount_Content" parameterType="map" resultType="_int">
		SELECT COUNT(*)
		FROM BOOK_REVIEW_BOARD BR
		WHERE BR.BR_STATUS='Y'
		AND BR.BR_CONTENT LIKE '%'||#{br_searchword}||'%'
	</select>
	<select id="getSearchList_Id" parameterType="map" resultMap="brResultMap">
		<include refid="brListSql"></include>
		AND M.USER_NNAME LIKE '%'||#{br_searchword}||'%'
		ORDER BY M.USER_NNAME DESC
	</select>
		<select id="getSearchList_Title" parameterType="map" resultMap="brResultMap">
		<include refid="brListSql"></include>
		AND BR.BR_TITLE LIKE '%'||#{br_searchword}||'%'
		ORDER BY BR.BR_TITLE DESC
	</select>
	<select id="getSearchList_Content" parameterType="map" resultMap="brResultMap">
		<include refid="brListSql"></include>
		AND BR.BR_CONTENT LIKE '%'||#{br_searchword}||'%'
		ORDER BY BR.BR_CONTENT DESC
	</select>
	
	<!-- 조회수 증가(반복조회 방지) -->
	<update id="increateViewcnt" parameterType="ReviewBoard">
		UPDATE BOOK_REVIEW_BOARD
		SET 
			BR_VIEWCOUNT = (BR_VIEWCOUNT + 1)
		WHERE 
			BR_NO = #{brNo}
	</update>
	
	<!-- 좋아요 증가 -->
	<update id="increaseReco" parameterType="ReviewBoard">
		UPDATE BOOK_REVIEW_BOARD
		SET 
			BR_LIKE = (BR_LIKE + 1)
		WHERE 
			BR_NO = #{brNo}
	</update>
		<!-- 마이페이지 리뷰 조회 -->
	<select id="myReviewList" parameterType="map" resultMap="brResultMap">
		SELECT
		    BR_NO,
		    BR_ISBN,
		    BR_CREATE_DATE
		FROM BOOK_REVIEW_BOARD
		WHERE USER_NO = #{userNo}
	</select>
	<!-- 마이페이지 스크랩 조회 -->
	<select id="myScrapList" parameterType="map" resultMap="bookScrapResultMap">
		SELECT SCRAP_NO,
			   USER_NO,
			   BS_ISBN
		FROM BOOK_SCRAP
		WHERE USER_NO = #{userNo}
	</select>
	<select id="myScrapCount" parameterType="map" resultType="_int">
		SELECT COUNT(*)
		FROM BOOK_SCRAP
		WHERE USER_NO = #{userNo}
	</select>
</mapper>